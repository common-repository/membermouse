/**
 * 
 * 
MemberMouse(TM) (http://www.membermouse.com)
(c) 2010-2011 Pop Fizz Studios, LLC. All rights reserved.
 */
class MM_ContentDeliveryEngine{
	
	public function saveScheduleSettings(){
		global $post;
		if(isset($post->post_status)){
			$prefix = MM_ContentDeliveryView::$PREFIX;
			if($post->post_status != 'auto-draft'
				&& false === (wp_is_post_autosave($post) || wp_is_post_revision($post))
				&& isset($_POST[MM_ContentDeliveryView::$NONCE.'-nonce']) && wp_verify_nonce($_POST[MM_ContentDeliveryView::$NONCE.'-nonce'], MM_ContentDeliveryView::$NONCE)) 
			{
					
				$fields = array(
					MM_ContentDeliveryView::$FORM_FIELD_BODY,
					MM_ContentDeliveryView::$FORM_FIELD_SUBJECT,
					MM_ContentDeliveryView::$FORM_FIELD_SEND,
					MM_ContentDeliveryView::$FORM_FIELD_FROM
				);
				
				$shouldSend =false;
				if(isset($_POST[MM_ContentDeliveryView::$NONCE][MM_ContentDeliveryView::$FORM_FIELD_SEND])){
					$shouldSend =true;	
				}
				
				$errors = "";
				foreach($fields as $field){
					delete_post_meta($post->ID, $prefix.$field);
					if(isset($_POST[MM_ContentDeliveryView::$NONCE][$field]) && !empty($_POST[MM_ContentDeliveryView::$NONCE][$field])){
						add_post_meta($post->ID, $prefix.$field, $_POST[MM_ContentDeliveryView::$NONCE][$field]);
					}
					else if($shouldSend){
						$errors .= "New Content Notification: ".ucfirst($field)." should be completed or notification will not be sent.<br /><br />";
					}
				}
				
				if(!empty($errors)){
					MM_Messages::addError($errors);
				}
			}
		}
	}
	
	private static function getPostsWithRestrictions(){
		global $wpdb;
		
		$sql = "select id from {$wpdb->posts} where post_status='publish'";
		$rows = $wpdb->get_results($sql);
		
		$posts = array();
		if(is_array($rows) && count($rows)>0){
			foreach($rows as $row){
				$posts[] = $row->id;
			}
		}
		return $posts;
	}
	
	public static function sendNotification($userId, $postId){
		$prefix = MM_ContentDeliveryView::$PREFIX;
		$body = get_post_meta($postId, $prefix.MM_ContentDeliveryView::$FORM_FIELD_BODY, true);
		$subject = get_post_meta($postId, $prefix.MM_ContentDeliveryView::$FORM_FIELD_SUBJECT, true);
		$send = get_post_meta($postId, $prefix.MM_ContentDeliveryView::$FORM_FIELD_SEND, true);
		$from = get_post_meta($postId, $prefix.MM_ContentDeliveryView::$FORM_FIELD_FROM, true);
		$queue = json_decode(get_user_meta($userId, $prefix.MM_ContentDeliveryView::$SENT_QUEUE_AJAX, true));
		
		if($send!='1'){
			return false;
		}
		
		//must have body and subject filled.
		if(empty($body) || empty($subject)){
			return false;
		}
		
		if(!is_array($queue)){
			$queue = array();
		}
		
		if(array_search($postId, $queue)===false){
			$user= new MM_User($userId);
			$emailAccount = MM_EmailAccount::getDefaultAccount();
			$context = new MM_Context($user, $emailAccount);
			$fromAccount = new MM_EmailAccount($from);
			
			
			$email = new MM_Email();
			$email->setContext($context);
			$email->setSubject($subject);
			$email->setBody($body);
			$email->setToName($user->getFirstName());
			$email->setToAddress($user->getEmail());
			$email->setFromName($fromAccount->getName());
			$email->setFromAddress($emailAccount->getAddress());
			
			$response = $email->send();
			if($response->type == MM_Response::$SUCCESS){
				if(empty($queue)){
					array_push($queue, $postId);
					delete_user_meta($userId, $prefix.MM_ContentDeliveryView::$SENT_QUEUE_AJAX);
					add_user_meta($userId, $prefix.MM_ContentDeliveryView::$SENT_QUEUE_AJAX, json_encode($queue));
				}
				else{
					array_push($queue, $postId);
					update_user_meta($userId, $prefix.MM_ContentDeliveryView::$SENT_QUEUE_AJAX, json_encode($queue));
				}
			}
			else{
				return $response->message;
			}
			return true;
		}
		return false;
	}
	
	private static function getAccessType($obj){
		if($obj instanceof MM_MemberType){
			return "member_type";
		}
		else if($obj instanceof MM_AccessTag){
			return "access_tag";
		}
		return false;
	}
	
	private static function getSchedule($accessId, $accessType){
		$whereEntries = array();
		$where = new stdClass();
		$where->access_id = $accessId;
		$where->access_type = $accessType;
		$whereEntries[] =$where;
		return self::getContentSchedule($whereEntries);
	}
	
	public static function copySchedule($fromObj, $toObj, $overwrite=false){
		global $wpdb;
		
		$fromAccessType = self::getAccessType($fromObj);
		if($fromAccessType ===false){
			return new MM_Response("invalid from object type", MM_Response::$ERROR);
		}
		
		$toAccessType = self::getAccessType($toObj);
		if($toAccessType ===false){
			return new MM_Response("invalid to object type", MM_Response::$ERROR);
		}
		
		if($overwrite){
			$sql = "delete from ".MM_TABLE_POSTS_ACCESS." where access_id='".$toObj->getId()."' and access_type='{$toAccessType}'";
			$wpdb->query($sql);
		}
		
		$errors = "";
		$fromSchedule = self::getSchedule($fromObj->getId(), $fromAccessType);

		if(count($fromSchedule)>0){
			foreach($fromSchedule as $day=>$rows){
				foreach($rows as $row){
					$postElem = "mm_member_types_opt";
					if($toAccessType != "member_type")
						$postElem = "mm_access_tags_opt";
			
					$data = array(
						'post_ID'=>$row->post_id,
						'type'=>$toAccessType,
						'edit_id'=>0,
						'day'=>$day,
						$postElem=>$toObj->getId(),
					);
					
					$accessRights = new MM_AccessRightsView();
					$response = $accessRights->saveAccessRights($data);
					
					if($response->type == MM_Response::$ERROR){
						$errors .= "-\"{$row->post_title}\" on day {$day} |";
					}
				}
			}
			
			if(!empty($errors)){
				return new MM_Response("Successfully copied.|Below are pages or posts we could not copy: |".$errors);
			}
			return new MM_Response("Successfully copied.");
		}
		return new MM_Response("No schedule found for ".$fromObj->getName(), MM_Response::$ERROR);
	}
	
/*
 * $generatedRows :array of $row
 * 	$row->types : array of obj {overall:[0-9}+, access{image} }
 * 	$row->days
 *  $row->pages : array of objects{post_title, ID}
 */
	public static function getContentSchedule($whereEntries){
		global $wpdb;
		if(empty($whereEntries)){
			return array();
		}
		
		$sql = "select 
						pa.*, p.post_title from ".MM_TABLE_POSTS_ACCESS." pa, {$wpdb->posts} p 
					where  p.post_status='publish' and (";
		foreach($whereEntries as $entry){
			if(!isset($entry->access_type) || !isset($entry->access_id)){
				return array();
			}
			$sql.= " pa.is_smart_content='0' and ( pa.access_type='{$entry->access_type}' and  pa.access_id='{$entry->access_id}') OR ";
		}
		$sql= preg_replace("/(OR )$/", ")", $sql); 
		$sql.=" AND pa.post_id=p.id ";	
		//$sql.=" order by CAST(`days` AS DECIMAL(10,2)) asc ";
		$sql.=" order by ABS(days) asc ";
		LogMe::write("getContentSchedule() : ".$sql);
		
		$returnArr = array();
		if(!empty($sql)){
			$rows = $wpdb->get_results($sql);
			if(!$rows){
		LogMe::write("getContentSchedule() : could not execute sql statement ".mysql_error());
		
		
			}
		LogMe::write("getContentSchedule() count : ".json_encode($rows));
			if(is_array($rows) && count($rows)>0){
				foreach($rows as $row){
					$returnArr[$row->days][] = $row;
				}
				return $returnArr;
			}
		}
		return array();
	}
	
	/*
	 * @param $users is a id=>value assoc array 
	 */
	public static function getUserSchedules($users){
		$newAccessArr = array();
		$dc = new MM_ProtectedContentEngine();
		if(is_array($users)){
			$posts = self::getPostsWithRestrictions();
			if(class_exists("LogMe")){
				LogMe::write("ContentDeliveryEngine::getUserSchedules(1) posts: ".json_encode($posts));
			}
			
			foreach($users as $userId=>$email){
				$user = new MM_User($userId);
				foreach($posts as $postId){
					$days = $dc->daysToAccess($postId, $userId);
					if(class_exists("LogMe")){
						LogMe::write("ContentDeliveryEngine::getUserSchedules(2) : ".$userId." : ".$days);
					}
					if($days!==false && $days===0){
						$newAccessArr[$userId] = $postId;
					}
				}
			}
		}
		return $newAccessArr;
	}
}