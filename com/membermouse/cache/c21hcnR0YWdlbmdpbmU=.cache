/**
 * 
 * 
MemberMouse(TM) (http://www.membermouse.com)
(c) 2010-2011 Pop Fizz Studios, LLC. All rights reserved.
 */
 class MM_SmartTagEngine 
 {
 	// tag groups
 	public static $SMARTTAG_MEMBER = "member";
 	public static $SMARTTAG_ORDER  = "order";
 	public static $SMARTTAG_EMAIL = "email";
 	public static $SMARTTAG_CONTENT = "content";
 	public static $SMARTTAG_PAGE = "page"; 
 	public static $SMARTTAG_MEMBERSHIP_PAUSE = "pausemembership"; 
 	public static $SMARTTAG_MEMBERSHIP_CANCEL = "cancelmembership"; 
 	public static $SMARTTAG_MEMBERSHIP_CHANGE = "changemembership"; 
 	public static $SMARTTAG_MEMBERSHIP_FASTFORWARD = "fastforwardmembership";
 	public static $SMARTTAG_MEMBERSHIP_CHOOSE = "choosemembership";
 	public static $SMARTTAG_1CLICKBUY = "1clickbuy";
 	public static $SMARTTAG_CUSTOM_FIELD = "customfield";
 	
 	// processes
 	public static $SMARTTAG_PROCESS_REGISTRATION = "registrationprocess"; 
 	public static $SMARTTAG_PROCESS_MYACCOUNT = "myaccount"; 
 	public static $SMARTTAG_PROCESS_LOGIN = "loginform";
 	public static $SMARTTAG_PROCESS_LOGOUT = "logoutform";
 	public static $SMARTTAG_PROCESS_LIMELIGHT_SUCCESS = "limelightsuccess";
 	public static $SMARTTAG_PROCESS_FORGOT_PASSWORD = "lostpasswordform";
 	public static $SMARTTAG_PROCESS_ERROR_MESSAGE = "errormessage";
 	
 	// object to house repetitive calls to a minimum i.e. orders index to resolve multiple
 	// calls to LL without the performance drag.
 	private static $containerObj = array();
 	
 	// chunks is to house the recursive call data when parsing embedded smart tags.
 	private static $chunks = array();
 	
 	// to be used when context is derived from something that is not of global context.
 	public static $context = null;
 	
 	/*
 	 * @param $contents is a string representation of data to be parsed for tags.
 	 * @param $context is an associative array to be bound with the engine for processing.
 	 * @returns filtered smarttag content.
 	 */
 	public static function processContent($content, MM_Context $context)
 	{
 	
 		// reload them.
	 	$smartTagLibrary = new MM_SmartTagEngine();
	 	$smartTagLibrary->loadTags();
	 	
 		self::$context = $context;
 		return do_shortcode($content);
 	}
 	
	public function addShortCode($atts, $content=null, $code="")
	{
		return $this->process($content, $code, $atts);
	}
	
 	public function process($content, $code, $atts)
 	{
 		global $current_user;
 		
 		/// determine if its a tag that is part of a group or to call a specific function
 		$func_name = preg_replace("/[^a-zA-Z0-9\_]+/","", strtolower($code));
 		$tagIdentifierArr = explode("_",$func_name);
 		
 		switch($tagIdentifierArr[1])
 		{
 			case self::$SMARTTAG_MEMBER: 			
 				return $this->getMemberTag($content, $func_name, $atts);
 			break;
 			
 			case self::$SMARTTAG_ORDER:
 				return $this->getOrderTag($content, $func_name, $atts);
 			break;
 			
 			case self::$SMARTTAG_EMAIL:
 				return $this->getEmailTag($content, $func_name, $atts);
 			break;
 			
 			case self::$SMARTTAG_CONTENT:
 				return $this->getContentTag($content, $func_name, $atts);
 			break;
 			
 			case self::$SMARTTAG_PAGE:
 				return $this->getPageTag($content, $func_name, $atts);
 			break;
 			
 			case self::$SMARTTAG_MEMBERSHIP_CHANGE:
 				return  $this->getChangeMembership($atts);
 			
 			case self::$SMARTTAG_MEMBERSHIP_PAUSE:
 				return  $this->getPauseMembership($atts);
 			
 			case self::$SMARTTAG_MEMBERSHIP_CANCEL:
 				return  $this->getCancelMembership($atts);
 				
 			case self::$SMARTTAG_MEMBERSHIP_CHOOSE:
 				return  $this->getChooseMembership($atts);
 				
 			case self::$SMARTTAG_MEMBERSHIP_FASTFORWARD:
 				return  $this->getFastForwardMembership($atts);
 				
 			case self::$SMARTTAG_1CLICKBUY:
 				return  $this->getOneClickBuy($atts);
 				
 			case self::$SMARTTAG_CUSTOM_FIELD:
 				return  $this->getCustomField($atts);
 				
 			default:
		 		if(method_exists($this, $func_name))
		 		{
		 			return call_user_func_array(array($this, $func_name), array($content, $atts, $code));
		 		}
 			break;
 		}
		return "[{$func_name}] not handled: ".$content;
 		
 	}
 	
 	private function getPageTag($content, $code, $atts)
 	{
 		$func_name = preg_replace("/[^a-zA-Z0-9\_]+/","", strtolower($code));
 		$tagIdentifierArr = explode("_",$func_name);
 		
 		$corePageEngine = new MM_CorePageEngine();
 		
 		switch($tagIdentifierArr[2])
 		{
 			case "cancellation":
 				return $corePageEngine->getUrl(MM_CorePageType::$CANCELLATION,'');
 				
 			case "home":
 				return $corePageEngine->getUrl(MM_CorePageType::$MEMBER_HOME_PAGE,'');
 				
 			case "login":
 				return $corePageEngine->getUrl(MM_CorePageType::$LOGIN_PAGE,'');
 				
 			case "myaccount":
 				return $corePageEngine->getUrl(MM_CorePageType::$MY_ACCOUNT,'');
 				
 			case "logout":
 				return wp_logout_url();
 				
 			case "lostpassword":
 				return $corePageEngine->getUrl(MM_CorePageType::$FORGOT_PASSWORD,'');
 				
 			case "registration":
 				return $corePageEngine->getUrl(MM_CorePageType::$REGISTRATION,'');		
 		}
 		
 		return "";
 	}
 	
 	private function getLostPasswordProcess()
 	{
 		return MM_TEMPLATE::generate(MM_MODULES."/lostpassword.php");
 	}
 	
 	private function getLogoutProcess(){
 		return MM_TEMPLATE::generate(MM_MODULES."/logout.php");
 	}
 	
 	private function getLoginProcess()
 	{
 		return MM_TEMPLATE::generate(MM_MODULES."/login.php");
 	}
 	
 	private function getContentTag($content, $code, $atts)
 	{
 		$tagParts = explode("_",$code);
 		switch(array_pop($tagParts))
 		{
 			case self::$SMARTTAG_PROCESS_REGISTRATION:
 				return $this->getRegistrationProcess();
 			case self::$SMARTTAG_PROCESS_MYACCOUNT:
 				return $this->getMyAccount();
 				
 				
 			case self::$SMARTTAG_PROCESS_LOGOUT:
 				return $this->getLogoutProcess();
 				
 				
 			case self::$SMARTTAG_PROCESS_LOGIN:
 				return $this->getLoginProcess();
 			case self::$SMARTTAG_PROCESS_FORGOT_PASSWORD:
 				return $this->getLostPasswordProcess();
 			case self::$SMARTTAG_PROCESS_ERROR_MESSAGE:
 				return $this->getErrorMessage();
 			case self::$SMARTTAG_PROCESS_LIMELIGHT_SUCCESS:
 				// TODO MATT when we implement the use of content, this will come into play.
 				return "";
 				
 		}
 		
 		return "";
 	}
 	
 	private function getMyAccount(){
		global $current_user, $user;
		$userId =0;
 		if(isset($current_user->ID) && intval($current_user->ID)>0)
 		{
 			$userId = $current_user->ID;
 		}
 		else if(isset($user->ID) && intval($user->ID)>0)
 		{
 			$userId = $user->ID;
 		}
 	
 		$info = new stdClass();
 		$info->user = $current_user;
 		return MM_TEMPLATE::generate(MM_MODULES."/myaccount.php", $info);
 	}
 	
 	private function getErrorMessage()
 	{
 		if(isset($_REQUEST[MM_Session::$PARAM_MESSAGE_KEY]))
 		{
 			return stripslashes(urldecode($_REQUEST[MM_Session::$PARAM_MESSAGE_KEY]));
 		}
 		return "";
 	}
 	
 	private function getOrderTag($content, $code, $atts)
 	{
 		if(!empty($atts))
 			foreach($atts as $k=>$v){ $$k = $v; }
 		
 		$orderId = (isset($_REQUEST[MM_Session::$PARAM_ORDER_ID]))?$_REQUEST[MM_Session::$PARAM_ORDER_ID]:"";
 		
 		if(intval($orderId)>0)
 		{
 			if(isset(self::$containerObj[MM_Session::$KEY_ORDER]) && self::$containerObj[MM_Session::$KEY_ORDER] instanceof MM_Order)
 			{
 				$order = self::$containerObj[MM_Session::$KEY_ORDER];
 			}
 			else
 			{
				$order = new MM_Order($orderId);
				self::$containerObj[MM_Session::$KEY_ORDER] = $order;
 			}
 			
			$func = $order->getSmartTagFunc($code);
			
			if(method_exists($order, $func)){
				return call_user_func_array(array($order,$func), array());
			}
 		}
 		
		return "";
 	}
 	
 	private function getEmailTag($content, $code, $atts)
 	{
 		$account = null;
 		
 		if(!empty($atts)) {
 			foreach($atts as $k=>$v) { 
 				$$k = $v; 
 			}
 		}
 		else
		{
			if(self::$context->emailAccount instanceof MM_EmailAccount)
			{
				if(self::$context->emailAccount->getId()>0){
					$account = self::$context->emailAccount;
				}
			}
		}
		
 		if(isset($isdefault) && $isdefault=='1') {
			$account = MM_EmailAccount::getDefaultAccount();
		}
		else
		{
			if(isset($emailid) && intval($emailid)>0)
			{
		 		$account = new MM_EmailAccount($emailid);
			}
		}
		
		if($account instanceof MM_EmailAccount)
		{
			$func = $account->getSmartTagFunc($code);
			
			if(method_exists($account, $func)) {
				return call_user_func_array(array($account,$func), array());
			}
		}
		
		return "";
 	}
 	
 	private function getMemberTag($content, $code, $atts)
 	{
 		global $current_user;
 		
 		$member=  null;
 		if(!empty($atts))
 			foreach($atts as $k=>$v){ $$k = $v; }
		else
		{
			if(self::$context instanceof MM_Context)
			{
				if(self::$context->member->getId()>0){
					$member = self::$context->member;
				}
			}
		}
		
 		$userId = 0;
 		
 		// if NOT in the administration area
 		if(!is_admin())
 		{
 			if(isset($_REQUEST[MM_Session::$PARAM_USER_ID]))
 			{
 				$userId = $_REQUEST[MM_Session::$PARAM_USER_ID];
 			}
 			else{
 				$lastUserId = MM_Session::value(MM_Session::$KEY_LAST_USER_ID);
 				if(intval($lastUserId)>0){
 					$userId = $lastUserId;
 				}
 				else if(!($member instanceof MM_User) && isset($current_user->ID) && intval($current_user->ID)>0){
		 			$userId = $current_user->ID;
		 		}
 			}
 		}
 		
 		$orderId = (isset($_REQUEST[MM_Session::$PARAM_ORDER_ID]))?$_REQUEST[MM_Session::$PARAM_ORDER_ID]:"";
 		
 		if(!(intval($orderId)>0 && intval($userId)>0) && isset($memberid)){
 			$userId = $memberid;
 		}
 	
		if(!(intval($orderId)>0 && intval($userId)>0) && !is_admin() && MM_Utils::isAdmin() && !isset($memberid))
		{
			$previewMode = MM_Preview::getData();
			if($previewMode !== false){
				$member = $previewMode->getUser();
			} 
		}
		
		if(intval($userId)>0)
		{
			if(!($member instanceof MM_User)){
				$member = new MM_User($userId);
			}
		}
		if($member instanceof MM_User){
	 		$func = $member->getSmartTagFunc($code);
	 		if(method_exists($member, $func)){
				return call_user_func_array(array($member,$func), array());
			}
		}
		return "";
 	}
 	
 	private function getFastForwardMembership($atts){
 		//MM_FastForwardMembership
 		if(!empty($atts)) {
 			foreach($atts as $k=>$v) { 
 				$key  =strtolower($k);
 				$$key = $v; 
 			}
 		}
 		
 		if(!isset($days)){
 			$days =0;
 		}
 		
 		if(!isset($price)){
 			$price= 0;
 		}
 		return "mmMembershipJs.fastForwardPrompt('{$price}','{$days}');";
 	}
 
 	private function getChooseMembership($atts)
 	{
 		if(!empty($atts)) {
 			foreach($atts as $k=>$v) { 
 				$key  =strtolower($k);
 				$$key = $v; 
 			}
 		}
 		
 		if(!isset($membertypeid))
 		{
 			$membertypeid = 0;
 		}
 		
 		$corePageEngine = new MM_CorePageEngine();
 		$url = $corePageEngine->getUrl(MM_CorePageType::$REGISTRATION,'');
 		
 		return MM_Utils::appendUrlParam($url, "member_type_id", $membertypeid, false);
 	}
 	
 	private function getCustomField($atts){
 		global $current_user;
 		if(!empty($atts)) {
 			foreach($atts as $k=>$v) { 
 				$$k = $v; 
 			}
 		}
 		
 		$name = (!isset($name))?"":$name;
 		$member = null;
 		
		if(self::$context instanceof MM_Context)
		{
			if(self::$context->member->getId()>0){
				$member = self::$context->member;
			}
		}
		
 		if(isset($_REQUEST[MM_Session::$PARAM_USER_ID]))
 		{
 			$userId = $_REQUEST[MM_Session::$PARAM_USER_ID];
 		}
 		else if(!($member instanceof MM_User) && isset($current_user->ID) && intval($current_user->ID)>0){
 			$userId = $current_user->ID;
 		}
		
		if(isset($userId) && intval($userId)>0)
		{
			if(!($member instanceof MM_User)){
				$member = new MM_User($userId);
			}
		}
		if($member instanceof MM_User){
			return $member->getCustomDataByName($name);
		}
		return "";
 	}
 	
 	private function getOneClickBuy($atts)
 	{
 		global $current_user;
 		if(!empty($atts)) {
 			foreach($atts as $k=>$v) { 
 				$$k = $v; 
 			}
 		}
 		
 		$paymentMethodName = (isset($paymentmethod))?$paymentmethod:"";
 		
 		if(empty($paymentMethodName)){
 			$user = new MM_User($current_user->ID);
 			if($user->hasCardOnFile() && MM_OptionUtils::getOption(MM_OptionUtils::$OPTION_KEY_INSTALL_TYPE) == MM_Site::$INSTALL_TYPE_LIMELIGHT){
 				$paymentMethodName = "limelight";
 			}
 			else{
 				$paymentMethodId = MM_PaymentService::getDefaultPaymentMethodId();
 				$paymentMethod = new MM_CampaignOptions($paymentMethodId);
 				if($paymentMethod->isValid()){
 					$attr = $paymentMethod->getAttr();
 					$json = json_decode($attr);
 					if(preg_match("/(paypal)/", strtolower($json->hidden_paymentObject))){
 						$paymentMethodName = "paypal";
 					}
 					if(preg_match("/(clickbank)/", strtolower($json->hidden_paymentObject))){
 						$paymentMethodName = "clickbank";
 					}	
 				}
 			}
 		}
 		
 		$productid = (!isset($productid))?"0":$productid;
 		$product = new MM_Product($productid);
 		$accessTagId = 0;
 		if($product->isValid()){
 			$tag = $product->getAssociatedAccessTag();
 			if(isset($tag->id) && intval($tag->id)>0){
 				$accessTagId = $tag->id;
 			}
 		}
 		return "javascript:mmOneClick.confirmPurchase('".$productid."', '".$current_user->ID."','".$accessTagId."','".$paymentMethodName."');";
 	}
 	
 	private function getChangeMembership($atts){
 		if(!empty($atts)) {
 			foreach($atts as $k=>$v) { 
 				$$k = $v; 
 			}
 		}
 	
 		global $current_user;
 		
 		$mid = (isset($membertypeid))?$membertypeid:"";
 		$memberTypeId = preg_replace("/[^0-9]+/", "", $mid);
		$user = new MM_User($current_user->ID);
		$userMemberType = new MM_MemberType($user->getMemberTypeId());
		$memberType = new MM_MemberType($memberTypeId);
		
		$error = "";
		if($user->isValid()){
			if($memberType->isValid()){ 
				if($memberType->getId() != $user->getMemberTypeId()){ 
					if(!MM_Utils::isAdmin()){
						if($userMemberType->isFree() && !$user->hasCardOnFile()){
							//check if product is free
							if(!$memberType->isFree()){
								// not free, invalid	
								$redirectUrl =  MM_CorePageEngine::getUrl(MM_CorePageType::$REGISTRATION);
								$redirectUrl = MM_Utils::appendUrlParam($redirectUrl, "product_id", $memberType->getRegistrationProduct());
								return "javascript:mmMembershipJs.freeToPaid('".$redirectUrl."');";
							}
						}
					}
					else{
						$error = "Administrators cannot change member types.";
					}
				}
				else{
					$error = "You are already a ".$memberType->getName()." member.";
				}
			}
			else{
				$error = "Member type is not valid.";
			}
		}
		else{
			$error = "Not a valid user.  Must be logged in to change membership.";
		}
 		return "javascript:mmMembershipJs.changeMembershipConfirm('".$current_user->ID."', '".$mid."','".$error."');";
 	}
 	
 	private function getCancelMembership($atts)
 	{
 		if(!empty($atts)) {
 			foreach($atts as $k=>$v) { 
 				$$k = $v; 
 			}
 		}
 		/*
 		 * 
 		<A HREF="https://www.paypal.com/cgi-bin/webscr?cmd=_subscr-find&alias=alice%40mystore%2ecom" _fcksavedurl="https://www.paypal.com/cgi-bin/webscr?cmd=_subscr-find&alias=alice%40mystore%2ecom">  
             <IMG BORDER="0" SRC="https://www.paypal.com/en_US/i/btn/btn_unsubscribe_LG.gif"></A> 
 		 */
 	/*
 	 * https://www.paypal.com/cgi-bin/webscr?cmd=_subscr-find&alias=alice%40mystore%2ecom
 	 */
 		$url = (isset($redirecturl))?$redirecturl:"";
 		$url = preg_replace("/[\'\"]+/", "", $url);
 		return "javascript:mmMembershipJs.cancelMembershipConfirm('".$url."');";
 	}
 	
 	private function getPauseMembership($atts)
 	{
 		if(!empty($atts)) {
 			foreach($atts as $k=>$v) { 
 				$$k = $v; 
 			}
 		}
 	
 		$url = (isset($redirecturl))?$redirecturl:"";
 		$url = preg_replace("/[\'\"]+/", "", $url);
 		return "javascript:mmMembershipJs.pauseMembershipConfirm('".$url."');";
 	}
 	
 	private function getRegistrationProcess()
 	{
 		$registration = new MM_RegistrationView();
 		return $registration->generateRegistrationHtml();
 	}
 	
 	private function mm_defaultcontent($content, $atts, $code)
 	{
 		if(is_array($atts) && count($atts)>0)
 		{
	 		foreach($atts as $k=>$v)
	 		{
	 			$key = strtolower($k);
	 			$$key=$v;
	 		}
 		}
 		self::$chunks["DefaultContent"][]= do_shortcode($content);
 	}
 	
 	private function mm_alternatecontent($content, $atts, $code)
 	{
 		global $current_user, $user;
 		if(is_array($atts) && count($atts)>0)
 		{
	 		foreach($atts as $k=>$v)
	 		{
	 			$key = strtolower($k);
	 			$$key=$v;
	 		}
 		}
 		
 		$user_id= 0;
 		if(isset($current_user->ID) && intval($current_user->ID)>0)
 		{
 			$user_id = $current_user->ID;
 		}
 		else if(isset($user->ID) && intval($user->ID)>0)
 		{
 			$user_id = $user->ID;
 		}
 		
 		$contentIsAvailable = true;
 		if(isset($iscontentavailable)){
 			$iscontentavailable = preg_replace("/[\s]+/", "", $iscontentavailable);
 			$contentPostIdArr = explode(",", $iscontentavailable);
 			
 			if(is_array($contentPostIdArr) && !empty($contentPostIdArr)){
 				$contentIsAvailable = false;
 				foreach($contentPostIdArr as $postId){
 					$protectedContent = new MM_ProtectedContentEngine();
	 				if(preg_match("/^(-)/", $postId)){
	 					$postId = preg_replace("/[^0-9]+/", "", $postId);
	 					
	 					if(!$protectedContent->canAccessPost($postId, $user_id)){
	 						$contentIsAvailable = true;
		 				}
	 				}
	 				else{
		 				if($protectedContent->canAccessPost($postId, $user_id)){
		 					$contentIsAvailable = true;
		 				}
	 				}
 				}
 			}
 		}
 		
 		$days=0;
 		if(isset($numdaysasmember))
 		{
 			if(intval($numdaysasmember)>0)
 			{
 				$days = $numdaysasmember;
 			}
 		}
 		
 		$addedChunk =false;
 	
 		$statusIsOk = false;
 		if(isset($status)){
 			$user = new MM_User($user_id);
 			if(preg_match("/(active|paused)/", strtolower($status))){
 				if(strtolower($status)=="active"){
 					if($user->getStatus() == MM_MemberStatus::$ACTIVE){
 						$statusIsOk =true;
 					}
 				}
 				else if(strtolower($status)=="paused"){
 					if($user->getStatus() == MM_MemberStatus::$PAUSED){
 						$statusIsOk =true;
 					}
 				}
 			}
 			else{
 				$statusIsOk=true;
 			}
 			unset($user);
 		}
 		else{
 			$statusIsOk = true;
 		}
 		
 		if($contentIsAvailable){
	 		if($statusIsOk){
				$protectedContent = new MM_ProtectedContentEngine();
		 		if(!isset($membertypeid) && !isset($accesstagid)){
		 			$user = new MM_User($user_id);
		 			if($user->isAdmin()){
		 				$preview_obj = MM_Preview::getData();
		 				$memberTypeId = $preview_obj->getMemberTypeId();
		 			}
		 			else{
		 				$memberTypeId = $user->getMemberTypeId();
		 			}
		 			
		 			if($protectedContent->canAccessChunk($current_user->ID, 'member_types',$memberTypeId, $days))
		 			{
		 				self::$chunks["AlternateContent"][]= do_shortcode($content);
		 				$addedChunk = true;
		 			}
		 		}
		 		else{
			 		if(isset($membertypeid))
			 		{
			 			$memberTypeArr = explode(",", $membertypeid);
			 			for($i=0; $i<count($memberTypeArr); $i++)
			 			{
				 			if(strtolower($memberTypeArr[$i]) == "all" || $protectedContent->canAccessChunk($current_user->ID, 'member_types', $memberTypeArr[$i], $days))
				 			{
				 				self::$chunks["AlternateContent"][]= do_shortcode($content);
				 				$addedChunk = true;
				 			}
			 			}
			 		}
			 		
			 		if(isset($accesstagid) && !$addedChunk)
			 		{
			 			$accessTagArr = explode(",", $accesstagid);
			 			for($i=0; $i<count($accessTagArr); $i++)
			 			{
				 			if(strtolower($accessTagArr[$i]) == "all" || $protectedContent->canAccessChunk($current_user->ID, 'access_tags', $accessTagArr[$i], $days))
				 			{
				 				self::$chunks["AlternateContent"][]= do_shortcode($content);
				 			}	
			 			}
			 		}
		 		}
	 		}
 		}
 	}
 	
 	private function mm_smartcontent($content, $atts, $code)
 	{
 		self::$chunks["DefaultContent"] = array();
 		self::$chunks["AlternateContent"] = array();
 		
 		if(is_array($atts) && count($atts)>0)
 		{
	 		foreach($atts as $k=>$v)
	 		{
	 			$key = strtolower($k);
	 			$$key=$v;
	 		}
 		}
 		do_shortcode($content);
 		
 		if(isset($displaypolicy))
 		{
 			switch($displaypolicy)
 			{
 				case "showFirst":
 					if(count(self::$chunks["AlternateContent"])>0)
 					{
 						return array_shift(self::$chunks["AlternateContent"]);
 					}
 					else if(count(self::$chunks["DefaultContent"])>0)
 					{
 						return array_shift(self::$chunks["DefaultContent"]);
 					}	
 					return "";
 				break;
 				case "showLast":
 					
 					if(count(self::$chunks["AlternateContent"])>0)
 					{
 						return array_pop(self::$chunks["AlternateContent"]);
 					}
 					else if(count(self::$chunks["DefaultContent"])>0)
 					{
 						return array_shift(self::$chunks["DefaultContent"]);
 					}	
 					return "";
 				break;
 				default:
 					$contents = "";
 					if(is_array(self::$chunks["AlternateContent"]) && count(self::$chunks["AlternateContent"])>0){
 						foreach(self::$chunks["AlternateContent"] as $value){
 							$contents.=$value;
 						}
 					}
 					else if(is_array(self::$chunks["DefaultContent"])){
 						foreach(self::$chunks["DefaultContent"] as $value){
 							$contents.=$value;
 						}
 					}
 					return $contents;
 				break;
 			}
 		}	
 		if(count(self::$chunks)>0)
 		{
 			if(count(self::$chunks["AlternateContent"])>0)
 			{
 				return implode("<br />", self::$chunks["AlternateContent"]);
 			}
 			else if(count(self::$chunks["DefaultContent"])>0)
 			{
 				return implode("<br />", self::$chunks["DefaultContent"]);
 			}
 		}
 		return $content;
 	}
 	
 	private static function addShortCodeAccess($atts, $postId){
 		global $wpdb;
 		
 		$type = "";
 		$typeId = 0;
 		$days = 0;
 		$queue = array();
 		if(is_array($atts)){
 			foreach($atts as $k=>$v){
 				if(preg_match("/(membertypeid|accesstagid|numdaysasmember)/", strtolower($k))){
 					switch($k){
 						case "membertypeid":
 							$type = MM_TYPE_MEMBER_TYPE;
 							$typeId = intval(preg_replace("/[^0-9]+/", "", $v));
 						break;
 						case "accesstagid":
 							$type = MM_TYPE_ACCESS_TAG;
 							$typeId = intval(preg_replace("/[^0-9]+/", "", $v));
 						break;
 					}
 				}
 				else{
 					if(preg_match("/(numdaysasmember)/", strtolower($v))){
 						$days = intval(preg_replace("/[^0-9]+/", "", $v));
 					}
 				}
 			}
 			if($typeId>0 && $days>=0 && $postId>0 && ($type == MM_TYPE_MEMBER_TYPE || $type == MM_TYPE_ACCESS_TAG)){
 				$key = $typeId."_".$type."_".$postId."_".$days;
 				if(!isset($queue[$key])){
 					$queue[$key] = 1;
	 				$sql = "insert into ".MM_TABLE_POSTS_ACCESS." set 
	 							post_id='{$postId}', 
	 							access_type = '{$type}',
	 							access_id='{$typeId}',
	 							days='{$days}',
	 							is_smart_content='1'			
	 				";
	 				$wpdb->query($sql);
 				}
 			}
 		}
 	}
 	
 	public static function saveTags($content, $postId){
 		global $wpdb;
 		$sql = "delete from ".MM_TABLE_POSTS_ACCESS." where post_id='{$postId}' and is_smart_content='1'";
 		$wpdb->query($sql);
 		
	 	$pattern = "\[[^\]]+\]";// get_shortcode_regex();
	    preg_match_all('/'.$pattern.'/', $content, $matches);

	    if(isset($matches[0]) && count($matches[0])>0){
			for($i=0; $i<count($matches[0]); $i++){
				self::addShortCodeAccess(shortcode_parse_atts($matches[0][$i]), $postId);
			}
		}
 	}
 	
	public function loadTags()
	{
		global $wpdb;
		$sql = "select * from ".MM_TABLE_SMARTTAGS." where visible='1'";
		$rows = $wpdb->get_results($sql);
		foreach($rows as $row)
		{
			add_shortcode($row->name, array($this,'addShortCode'));
		}
	}
 	
 }
