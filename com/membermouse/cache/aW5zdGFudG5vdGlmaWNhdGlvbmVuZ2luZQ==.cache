/**
 * 
 * 
MemberMouse(TM) (http://www.membermouse.com)
(c) 2010-2011 Pop Fizz Studios, LLC. All rights reserved.
 */

class MM_InstantNotificationEngine{
	public static $INI_EVENT_TYPE_CREATE_MEMBER = 1;
	public static $INI_EVENT_TYPE_UPDATE_MEMBER = 2;
	
	public $forceRemoteCall = false;
	
	public function sendNotification(){
		$args = func_get_args();
		if(count($args)<=0){
			return new MM_Response("Invalid function signature.", MM_Response::$ERROR);
		}
		$eventTypeId = func_get_arg(0);
		$ini = new MM_InstantNotification($eventTypeId);
		if(!$ini->isValid()){
			return new MM_Response("Invalid event type.", MM_Response::$ERROR);
		}
		$scriptUrl = $ini->getScriptUrl(true);
		if(empty($scriptUrl)){
			return new MM_Response("Invalid script url.", MM_Response::$ERROR);
		}
		
		switch($eventTypeId){
			case self::$INI_EVENT_TYPE_CREATE_MEMBER:
			case self::$INI_EVENT_TYPE_UPDATE_MEMBER:
				if(count($args)!=2){
					return new MM_Response("Invalid function signature[2].", MM_Response::$ERROR);
				}
				
	            $user = func_get_arg(1);
	            
				if(!($user instanceof MM_User)){
					return new MM_Response("Invalid function signature[3].", MM_Response::$ERROR);
	            }
	            
				if($ini->getStatus()!='1' && !$this->forceRemoteCall){
					return new MM_Response("Status is not active for this event.", MM_Response::$ERROR);
				}
				
	            $params = $this->constructMemberEventParams($eventTypeId, $user);
	            $this->notify($eventTypeId, $params);
	            return new MM_Response();
				break;
		}
		return new MM_Response("Invalid notification or event type id.", MM_Response::$ERROR);
	}
	
	private function constructMemberEventParams($eventTypeId, MM_User $user){
			$params = array();
			if($user->getId()>0){
				$params["member_id"] = $user->getId();
			}
			$params["event_type_id"] = $eventTypeId;
			$params["username"] = $user->getUsername();
			$params["email"] = $user->getEmail();
			$params["member_type_id"] = $user->getMemberTypeId();
			$params["password"] = $user->getPassword();
			$params["status"] = $user->getStatus();
			
			$params["billing_address"] = $user->getBillingAddress();
			$params["billing_city"] = $user->getBillingCity();
			$params["billing_state"] = $user->getBillingState();
			$params["billing_zipcode"] = $user->getBillingZipCode();
			$params["billing_country"] = $user->getBillingCountryName();
			
			$params["shipping_address"] = $user->getShippingAddress();
			$params["shipping_city"] = $user->getShippingCity();
			$params["shipping_state"] = $user->getShippingState();
			$params["shipping_zipcode"] = $user->getShippingZipCode();
			$params["shipping_country"] = $user->getShippingCountryName();
			
			return $params;
	}
	
	private function arrayToGet($params){
		
		$paramUrl = "";
		foreach($params as $key=>$val){
			$paramUrl.=$key."=".urlencode($val)."&";
		}
		return $paramUrl;
	}
	
	private function notify($eventTypeId, $params){
		
		$ini = new MM_InstantNotification($eventTypeId);
		$url = $ini->getScriptUrl(true);
		$postvars = $this->arrayToGet($params);
		
		LogMe::write("notify() : Invoking ".$url."?".$postvars);
		
		$ch = curl_init($url."?".$postvars);
		curl_setopt($ch, CURLOPT_POST      ,0);
		curl_setopt($ch, CURLOPT_HEADER      ,0);  // DO NOT RETURN HTTP HEADERS
		curl_setopt($ch, CURLOPT_RETURNTRANSFER  ,1);  // RETURN THE CONTENTS OF THE CALL
		$contents = curl_exec($ch);
		curl_close($ch);
	}
}