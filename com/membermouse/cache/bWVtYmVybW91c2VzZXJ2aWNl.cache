/**
 * 
 * 
MemberMouse(TM) (http://www.membermouse.com)
(c) 2010-2011 Pop Fizz Studios, LLC. All rights reserved.
 */
class MM_MemberMouseService
{
	public static $SERVERIP = MM_CENTRAL_SERVER; 
	
	public static $METHOD_ADD = "addMMSite";
	public static $METHOD_ACTIVATE = "activateMMSite";
	public static $METHOD_GET = "getMMSite";
	public static $METHOD_AUTH = "authMMSite";
	public static $METHOD_GET_RELEASE = "getRelease";
	public static $METHOD_GET_RELEASES = "getReleases";
	public static $METHOD_UPDATE = "updateMMSite";
	public static $METHOD_GET_SITES = "getMMSites";
	public static $METHOD_GET_ALL_SITES = "getAllMMSites";
	public static $METHOD_GET_CONTEXTUAL_HELP = "getContextualHelp";
	public static $METHOD_DEACTIVATE = "deactivateMMSite";
	public static $METHOD_ARCHIVE = "archiveMMSite";
	public static $METHOD_UPDATE_CAMPAIGNS_IN_USE = "updateCampaignsInUse";
	
	private static function sendRequest($method, $postvars)
	{
		$url = self::$SERVERIP.$method;
	
		LogMe::write("MM_MemberMouseService.sendRequest(): URL: ".$url." : ".$postvars);
		
		$ch = curl_init($url);
		curl_setopt($ch, CURLOPT_POST      ,1);
		curl_setopt($ch, CURLOPT_POSTFIELDS    , $postvars);
		curl_setopt($ch, CURLOPT_HEADER      ,0);  // DO NOT RETURN HTTP HEADERS
		curl_setopt($ch, CURLOPT_RETURNTRANSFER  ,1);  // RETURN THE CONTENTS OF THE CALL
		$contents = curl_exec($ch);
		curl_close($ch);
//		echo $contents;
		LogMe::write("MM_MemberMouseService::sendRequest : ".$contents);
		$json = json_decode($contents);
		$json->response_data = json_decode($json->response_data);
		
		return $json;
	}
	
	public static function deployRelease($domain,$exportedVersion, $minorVars,$siteId){
		$postvars = "version=".$exportedVersion.$minorVars;
		$url = $domain."/wp-content/plugins/membermouse/api/request.php?q=/deployRelease";
		$ch = curl_init($url);
		curl_setopt($ch, CURLOPT_POST, 1);
		curl_setopt($ch, CURLOPT_POSTFIELDS, $postvars);
		curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);
		curl_setopt($ch, CURLOPT_HEADER, 0);
		curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
		$content = curl_exec($ch);
		LogMe::write("MM_MemberMouseService::deployRelease : ".$content);
		///echo $content;
		curl_close($ch); 
		
		$result = json_decode($content);
		
		$currentFails = MM_OptionUtils::getOption(MM_OptionUtils::$OPTION_KEY_MINOR_VERSION_FAILS);
		$cfArr = explode(",",$currentFails);
		if(!is_array($cfArr) || empty($cfArr)){
			$cfArr = array();
		}
		if(!isset($result->response_code) || (isset($result->response_code) && $result->response_code!="200")){
			if(!in_array($siteId, $cfArr)){
				$cfArr[] = $siteId;
			}
		}
		else{
			$key= array_search($siteId, $cfArr);
			if($key!==false){
				unset($cfArr[$key]);
			}
		}
		MM_OptionUtils::setOption(MM_OptionUtils::$OPTION_KEY_MINOR_VERSION_FAILS, implode(",", $cfArr));
		return $result;
	}
	
	public static function getReleases()
	{
		$apisecret = get_option("mm-apisecret");
		$apikey = get_option("mm-apikey");
		
		$postvars = "apisecret=".$apisecret."&apikey=".$apikey;
		$contents = self::sendRequest(self::$METHOD_GET_RELEASES, $postvars);
		
		if(!self::isSuccessfulRequest($contents))
		{
			return false;
		}
		
		$json = $contents->response_data;
		if(is_null($json)){
			return false;
		}
		return $json;
	}
	
	public static function getRelease($version,$minorVersion)
	{
		$apisecret = get_option("mm-apisecret");
		$apikey = get_option("mm-apikey");
		
		$postvars = "apisecret=".$apisecret."&apikey=".$apikey."&version=".$version."&minor_version=".$minorVersion;
		$contents = self::sendRequest(self::$METHOD_GET_RELEASE, $postvars);
		
		if(!self::isSuccessfulRequest($contents))
		{
			return false;
		}
		
		$json = $contents->response_data;
		if(is_null($json)){
			return false;
		}
		$checksum = $json->checksum;
		unset($json->checksum);
		
		$compareSum = strlen(json_encode($json));
		LogMe::write("CHECKSUM : ".$checksum." vs. ".$compareSum);
		if($checksum!=$compareSum){
			return new MM_Response("Checksums are not equivalent : {$checksum} vs. {$compareSum}", MM_Response::$ERROR);
		}
		return self::saveDynamicClasses($json->classes);
	}
	
	public static function archiveSite($id)
	{
		$apisecret = get_option("mm-apisecret");
		$apikey = get_option("mm-apikey");
		
		$version= MM_Site::getPluginVersion();
		$postvars = "apisecret=".$apisecret."&apikey=".$apikey."&id=".$id;
		return self::sendRequest(self::$METHOD_ARCHIVE, $postvars);
	}
	
	public static function updateCampaignUsage($siteId, $campaignsInUse){
		$apisecret = get_option("mm-apisecret");
		$apikey = get_option("mm-apikey");
		
		$version= MM_Site::getPluginVersion();
		$postvars = "apisecret=".$apisecret."&apikey=".$apikey."&campaigns_in_use=".$campaignsInUse."&id=".$siteId;
		return self::sendRequest(self::$METHOD_UPDATE_CAMPAIGNS_IN_USE, $postvars);
	}
	
	public static function getSites($memberId, $orderSortColumn="date_added", $orderSortDir="desc")
	{
		$apisecret = get_option("mm-apisecret");
		$apikey = get_option("mm-apikey");
		
		$version= MM_Site::getPluginVersion();
		$postvars = "apisecret=".$apisecret."&apikey=".$apikey."&member_id=".$memberId."&version=".$version;
		
		return self::sendRequest(self::$METHOD_GET_SITES, $postvars);
	}
	
	public static function getAllSites($sortColumn="date_added", $sortDir="desc", $limitStart=0, $limitTotal=10)
	{
		$apisecret = get_option("mm-apisecret");
		$apikey = get_option("mm-apikey");
		
		$version= MM_Site::getPluginVersion();
		$postvars = "apisecret=".$apisecret."&apikey=".$apikey."&version=".$version;
		$postvars.="&sort_column=".$sortColumn."&sort_dir=".$sortDir."&limit_start=".$limitStart."&limit_total=".$limitTotal;
		return self::sendRequest(self::$METHOD_GET_ALL_SITES, $postvars);
	}
	
	public static function getContextualHelp($sectionId)
	{
		$apisecret = get_option("mm-apisecret");
		$apikey = get_option("mm-apikey");
		
		$version= MM_Site::getPluginVersion();
		$postvars = "apisecret=".$apisecret."&apikey=".$apikey."&version=".$version;
		$postvars.="&section_id=".$sectionId;
		
		return self::sendRequest(self::$METHOD_GET_CONTEXTUAL_HELP, $postvars);
	}
	
	public static function deactivateSite()
	{
		$apisecret = get_option("mm-apisecret");
		$apikey = get_option("mm-apikey");
		
		$postvars = "apisecret=".$apisecret."&apikey=".$apikey;
		$contents = self::sendRequest(self::$METHOD_DEACTIVATE, $postvars);
		self::cleanUpOptions();
	}
	
	public static function isSuccessfulRequest($obj)
	{
		if($obj->response_code == "200") {
			return true;
		}
		
		return false;
	}
	
	public static function activateSite($url)
	{
		$version= MM_Site::getPluginVersion();
		$postvars = "url=".urlencode($url)."&version=".$version;
		$minorVersion = MM_OptionUtils::getOption(MM_OptionUtils::$OPTION_KEY_MINOR_VERSION);
		if($minorVersion!==false && intval($minorVersion)>0){
			$postvars.="&minor_version=".$minorVersion;
		}
		
		$json_data = self::sendRequest(self::$METHOD_ACTIVATE, $postvars);
		
		if(!self::isSuccessfulRequest($json_data))
		{
			self::cleanUpOptions();
			return false;
		}
		$json = $json_data->response_data;
		return self::updateSiteInfo($json);
	}
	
	private static function authorizeSite()
	{
		global $wpdb;
		
		$apisecret = get_option("mm-apisecret");
		$apikey = get_option("mm-apikey");
		
		// calculate current number of total members
		$sql = "SELECT count(*) as total FROM ".$wpdb->users." WHERE mm_registered != '' AND mm_status != 2";
		$result = $wpdb->get_row($sql);
		
		if($result) {
			$totalMembers = $result->total;
		}
		else {
			$totalMembers = 0;
		}
		
		$sql = "SELECT 
					count(u.id) as total 
				FROM 
					".$wpdb->users." u, ".MM_TABLE_MEMBER_TYPES." m 
				WHERE 
					u.mm_registered != '' AND 
					u.mm_status != ".MM_MemberStatus::$CANCELED." AND 
					u.mm_member_type_id = m.id AND
					m.is_free != '1'
			";
		$result = $wpdb->get_row($sql);
		
		if($result) {
			$paidMembers = $result->total;
		} 
		else {
			$paidMembers = 0;
		}
		
		$version = MM_Site::getPluginVersion();
		$postvars = "apisecret=".$apisecret."&apikey=".$apikey."&total_members=".$totalMembers."&paid_members=".$paidMembers."&version=".$version;
		$minorVersion = MM_OptionUtils::getOption(MM_OptionUtils::$OPTION_KEY_MINOR_VERSION);
		if($minorVersion!==false){
			$postvars.="&minor_version=".$minorVersion;
		}
		LogMe::write("MMService - postvars: ".$postvars);
		$contents = self::sendRequest(self::$METHOD_AUTH, $postvars);
		
		if(!self::isSuccessfulRequest($contents))
		{
			self::cleanUpOptions();
			return false;
		}
		
		$json = $contents->response_data;
		self::updateSiteInfo($json);
		
		return true;
	}
	
	private static function updateSiteInfo($json)
	{
		if(isset($json->apikey))
		{	
			foreach($json as $k=>$val)
			{
				if(is_string($val)) {
					MM_OptionUtils::setOption("mm-".$k, stripslashes($val));
				}
			}
			
			self::saveDynamicClasses($json->classes);
			MM_OptionUtils::setOption("mm-last_check", date("Y-m-d h:i:s"));
		
			return $json;
		}
		
		return false;
	}
	
	public static function cleanUpOptions()
	{
		$options = array("mm-id", "mm-name", "mm-location", "mm-campaign_ids", "mm-limelight_url", "mm-limelight_password", "mm-limelight_username",
						"mm-status", "mm-ipaddress", "mm-member_id", "mm-last_check", "mm-is_membermouse", "mm-interval", "mm-apisecret", "mm-apikey", 
						"mm-total_members", "mm-paid_members", "mm-last_checked", "mm-campaigns_in_use", "mm-is_dev");
		
		foreach($options as $option) {
			delete_option($option);
		}
	}
	
	private static function getSiteInfo()
	{
		$data = new stdClass();
		$data->id = get_option("mm-id");
		$data->name = get_option("mm-name");
		$data->is_dev = get_option("mm-is_dev");
		$data->location = get_option("mm-location");
		$data->campaign_ids = get_option("mm-campaign_ids");
		$data->campaigns_in_use = get_option("mm-campaigns_in_use");
		$data->limelight_url = get_option("mm-limelight_url");
		$data->limelight_username = get_option("mm-limelight_username");
		$data->limelight_password = get_option("mm-limelight_password");
		$data->status = get_option("mm-status");
		$data->is_membermouse = (bool)get_option("mm-is_membermouse");
		$data->paid_members = get_option("mm-paid_members");
		$data->total_members = get_option("mm-total_members");
		
		return $data;
	}
	
	public static function shouldAuthorize()
	{
		if(!preg_match("/(plugins\.php)/", $_SERVER["PHP_SELF"]) && is_admin())
		{
			$lastChecked = get_option("mm-last_check");	
			$nextCheck = strtotime("+".base64_decode(get_option("mm-interval"))." day", strtotime($lastChecked));
			$today  =Date("Y-m-d h:i:s");
			
			if(strtotime($today) >= $nextCheck) {
				return true;
			}
			
			return false;
		}
		
		return false;
	}
	
	public static function getSiteData()
	{
	 	if(self::shouldAuthorize())
	 	{
			if(self::authorizeSite()) {
				return self::getSiteInfo();
			}
			else
			{
				$error = "The MemberMouse plugin could <b>NOT</b> be authenticated by membermouse.com. The plugin will now be deactivated.";
				header("Location: plugins.php?".MM_Session::$PARAM_COMMAND_DEACTIVATE."=1&".MM_Session::$PARAM_MESSAGE_KEY."=".urlencode($error));
				exit;
			}
	 	}
	 	
		return self::getSiteInfo();
	}
	
	public static function getSite($siteId)
	{
		$apisecret = get_option("mm-apisecret");
		$apikey = get_option("mm-apikey");
		
		$version = MM_Site::getPluginVersion();
		$postvars = "apisecret=".$apisecret."&apikey=".$apikey."&id=".$siteId;
		$contents = self::sendRequest(self::$METHOD_GET, $postvars);
		
		if(!self::isSuccessfulRequest($contents))
		{
			return false;
		}
		
		$json = $contents->response_data;
		
		return $json;
	}
	
	public static function commitSiteData($memberId, MM_Site $site, $isAdmin=false)
	{
		// MM only
		$apikey = get_option("mm-apikey");
		$apisecret = get_option("mm-apisecret");
		$siteId = $site->getId();
		
		$postvars = "apisecret=".$apisecret."&apikey=".$apikey."&";
		$postvars .= "member_id=".$memberId."&";
		$postvars .= "id=".$siteId."&";
		$postvars .= "name=".$site->getName()."&";
		$postvars .= "campaign_ids=".$site->getCampaignIds()."&";
		$postvars .= "location=".$site->getLocation()."&";
		$postvars .= "limelight_url=".$site->getLLUrl()."&";
		$postvars .= "limelight_username=".$site->getLLUsername()."&";
		$postvars .= "limelight_password=".$site->getLLPasswordEncrypted()."&";
		if($isAdmin){
			$postvars .= "status=".$site->getStatus()."&";
			$postvars .= "is_dev=".$site->isDev()."&";
			$postvars .= "is_mm=".$site->isMM()."&";
		}
		$postvars .= "paid_members=".$site->getPaidMembers()."&";
		$postvars .= "total_members=".$site->getTotalMembers();
		LogMe::write("commitSiteData() : ".$postvars);
		if(isset($siteId) && intval($siteId) > 0) {
			$contents = self::sendRequest(self::$METHOD_UPDATE, $postvars);
		}
		else {
			$contents = self::sendRequest(self::$METHOD_ADD, $postvars);
		}
		
		return $contents;
	}

	private static function cacheClass($className, $classEntry){
		$filePath = ABSPATH."wp-content/plugins/".MM_PLUGIN_NAME."/com/membermouse/cache";
		if(is_dir($filePath)){
			if(is_writeable($filePath)){
				if(preg_match("/(membermouse_schema)$/", $className)){
					$filePath .= "/".$className.".sql";
				}
				else{
					$filePath .= "/".base64_encode($className).".cache";
				}
				$fh = fopen($filePath, 'w');
				fwrite($fh, $classEntry);
				fclose($fh);
				
				if(file_exists($filePath)){
					@chmod($filePath, 0777);
				}
				
				return true;
			}
			else{
				return false;
			}
		}
		else{
			return false;
		}
	}
	
	private static function saveDynamicClasses($classes)
	{
		global $wpdb;
		
		if(is_object($classes) || is_array($classes))
		{
			$sql = "delete from ".MM_TABLE_CONTAINER." where is_system='0'";
			$wpdb->query($sql);
			
			foreach($classes as $className=>$classEntry)
			{
				$sql = "insert into ".MM_TABLE_CONTAINER." set 
								name='%s', 
								obj='%s', date_added=NOW()	
						";
				
				if(strtolower($className) == "membermouseservice"){
					$sql = "update ".MM_TABLE_CONTAINER." set
								name='%s', 
								obj='%s', 
								date_added=NOW() where name='membermouseservice' limit 1";
				}
				
				
				if($wpdb->query($wpdb->prepare($sql, $className, $classEntry))){
					$ret = self::cacheClass($className, $classEntry);
					if(!$ret){
						echo "DID NOT WRITE {$className}<br />";
					}
				}
			}
		}
		
		return true;
	}
 }
